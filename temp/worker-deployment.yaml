apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: authentik-worker
  name: authentik-worker
  namespace: authentik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authentik-worker
  template:
    metadata:
      labels:
        app: authentik-worker
    spec:
      containers:
        - env:
            - name: AUTHENTIK_POSTGRESQL__HOST
              value: postgresql
            - name: AUTHENTIK_POSTGRESQL__NAME
              value: authentik
            - name: AUTHENTIK_POSTGRESQL__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: authentik-passwords
                  key: postgresql
            - name: AUTHENTIK_POSTGRESQL__USER
              value: authentik
            - name: AUTHENTIK_REDIS__HOST
              value: redis
            - name: AUTHENTIK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: authentik-passwords
                  key: authentik
            - name: PG_PASS
              valueFrom:
                secretKeyRef:
                  name: authentik-passwords
                  key: postgresql
          image: ghcr.io/goauthentik/server:2024.4.2
          name: authentik-worker
          volumeMounts:
            - mountPath: /media
              name: worker-claim0
            - mountPath: /certs
              name: worker-claim1
            - mountPath: /templates
              name: worker-claim2
      restartPolicy: Always
      volumes:
        - name: worker-claim0
          persistentVolumeClaim:
            claimName: worker-claim0
        - name: worker-claim1
          persistentVolumeClaim:
            claimName: worker-claim1
        - name: worker-claim2
          persistentVolumeClaim:
            claimName: worker-claim2
